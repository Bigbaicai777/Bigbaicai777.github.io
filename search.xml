<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>每日一练（1）</title>
      <link href="posts/34253.html"/>
      <url>posts/34253.html</url>
      
        <content type="html"><![CDATA[<h2 id="PAT1001-3n-1-猜想"><a href="#PAT1001-3n-1-猜想" class="headerlink" title="PAT1001 (3n+1)猜想"></a>PAT1001 (3n+1)猜想</h2><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528">传送门</a></p><p>对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个测试输入包含 1 个测试用例，即给出正整数 n 的值。</p><blockquote><p>3</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出从 n 计算到 1 需要的步数</p><blockquote><p>5</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">static int m&#x3D;0;</span><br><span class="line">int func(int n)&#123;</span><br><span class="line">if(n&#x3D;&#x3D;1)return m;</span><br><span class="line">else if(n%2&#x3D;&#x3D;0)&#123;</span><br><span class="line">m++;</span><br><span class="line">return func(n&#x2F;2);</span><br><span class="line">&#125;</span><br><span class="line">else if(n%2&#x3D;&#x3D;1)&#123;</span><br><span class="line">m++;</span><br><span class="line">return func((3*n+1)&#x2F;2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">int number;</span><br><span class="line">cin&gt;&gt;number;</span><br><span class="line">func(number);</span><br><span class="line">cout&lt;&lt;m;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="UVA492-【Pig-Latin】"><a href="#UVA492-【Pig-Latin】" class="headerlink" title="UVA492 【Pig-Latin】"></a>UVA492 【Pig-Latin】</h2><p>请您编写一个程序，输入任意数量行的文本，并以Pig Latin输出。每行文本将包含一个或多个单词。一个“单词”被定义为一个连续的字母序列（大写字母和/或小写字母）。单词根据以下的规则转换为Pig Latin，非单词的字符在输出时则和输入中出现的完全一样：</p><ul><li>[1] 以元音字母（a、e、i、o或u，以及这些字母的大写形式）开头的单词，要在其后面附加字符串“ay”（不包括双引号）。例如“apple”变成“appleay”。</li><li>[2] 以辅音字母（不是A, a, E, e, I, i, O, o, U 或 u的任何字母）开头的单词，要去掉第一个辅音字母，并将之附加在单词的末尾，然<br>后再在单词的末尾加上“ay”。例如，“hello”变成“ellohay”。</li><li>[3] 不要改变任何字母的大小写。。</li></ul><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>This is the input.</p><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>hisTay isay hetay inputay.</p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">string str; </span><br><span class="line">int Ischar(char c)&#123;&#x2F;&#x2F;判断是否是字母 </span><br><span class="line">if(c&gt;&#x3D;&#39;a&#39;&amp;&amp;c&lt;&#x3D;&#39;z&#39;||c&gt;&#x3D;&#39;A&#39;&amp;&amp;c&lt;&#x3D;&#39;Z&#39;) </span><br><span class="line">return 1;</span><br><span class="line">else return 0;</span><br><span class="line">&#125;</span><br><span class="line">int Isvowl(char c)&#123;&#x2F;&#x2F;判断是否元音 </span><br><span class="line">if(c&#x3D;&#x3D;&#39;a&#39;||c&#x3D;&#x3D;&#39;e&#39;||c&#x3D;&#x3D;&#39;i&#39;||c&#x3D;&#x3D;&#39;o&#39;||c&#x3D;&#x3D;&#39;u&#39;)</span><br><span class="line">return 1;</span><br><span class="line">else if(c&#x3D;&#x3D;&#39;A&#39;||c&#x3D;&#x3D;&#39;E&#39;||c&#x3D;&#x3D;&#39;I&#39;||c&#x3D;&#x3D;&#39;O&#39;||c&#x3D;&#x3D;&#39;U&#39;)</span><br><span class="line">return 1;</span><br><span class="line">else return 0;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">while(getline(cin,str))&#123;</span><br><span class="line">int s&#x3D;0;&#x2F;&#x2F;当前位置 </span><br><span class="line">int t&#x3D;0;&#x2F;&#x2F;单词偏移量 </span><br><span class="line">while(str[s])&#123;</span><br><span class="line">if(!Ischar(str[s])) &#123;</span><br><span class="line">cout&lt;&lt;str[s++];</span><br><span class="line">t&#x3D;s;&#x2F;&#x2F;不是字母就是空格，输出这个空格，并且将偏移量设置为0 </span><br><span class="line">&#125;</span><br><span class="line">else if(Ischar(str[t]))&#123;&#x2F;&#x2F;是字母偏移量+1 </span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">if(!Isvowl(str[s]))&#123;&#x2F;&#x2F;不是元音字母就从第二个字母打印 </span><br><span class="line">for(int i&#x3D;s+1;i&lt;t;++i)&#123;</span><br><span class="line">cout&lt;&lt;str[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;str[s];</span><br><span class="line">&#125;else&#x2F;&#x2F;是元音字母，从第一个开始打印，并在结尾附加ay </span><br><span class="line">for(int i&#x3D;s;i&lt;t;++i)</span><br><span class="line">cout&lt;&lt;str[i];</span><br><span class="line">cout&lt;&lt;&quot;ay&quot;;</span><br><span class="line">s&#x3D;t;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="特殊的四位数字"><a href="#特殊的四位数字" class="headerlink" title="特殊的四位数字"></a>特殊的四位数字</h2><p>查找并列出所有以十进制表示的四位数，其四位数的总和等于以十六进制（以16为基数）表示的位数，并且也等于以十二进制表示的四位数的总和（以12为基数的符号。<br>例如，数字2991的（十进制）数字之和为2 + 9 + 9 + 1 =21。由于2991 = 1 * 1728 + 8 * 144 + 9 * 12 + 3，因此其十二进制表示为1893 12，这些数字总和也为21。但是十六进制的2991是BAF，而11 + 10 + 15 = 36，因此程序应拒绝2991。<br>但是，下一个数字（2992）在所有三个表示形式中的数字总和为22，因此2992应该在列出的输出上。（我们不希望使用少于四位数的十进制数字（不包括前导零），因此2992是第一个正确答案。）</p><h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p>没有输出</p><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>2992</p><p>2993</p><p>2994</p><p>2995</p><p>2996</p><p>2997</p><p>2998</p><p>2999</p><p>…</p><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int Tosum(int num,int base)&#123;</span><br><span class="line">int sum&#x3D;0;</span><br><span class="line">sum&#x3D;num%base+(num&#x2F;base)%base+(num&#x2F;base&#x2F;base)%base+(num&#x2F;base&#x2F;base&#x2F;base)%base;</span><br><span class="line">return sum;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">for(int i&#x3D;2992;i&lt;&#x3D;9999;i++)&#123;</span><br><span class="line">if(Tosum(i,10)&#x3D;&#x3D;Tosum(i,12)&amp;&amp;Tosum(i,12)&#x3D;&#x3D;Tosum(i,16))</span><br><span class="line">cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="PAT1002写出这个数"><a href="#PAT1002写出这个数" class="headerlink" title="PAT1002写出这个数"></a>PAT1002写出这个数</h2><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805324509200384">传送门</a></p><p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p><h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><p>每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10e100。</p><blockquote><p>1234567890987654321123456789</p></blockquote><h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p>在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p><blockquote><p>yi san wu</p></blockquote><h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main() &#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    int sum &#x3D; 0;</span><br><span class="line">    string str[10] &#x3D;  &#123;&quot;ling&quot;, &quot;yi&quot;, &quot;er&quot;, &quot;san&quot;, &quot;si&quot;, &quot;wu&quot;, &quot;liu&quot;, &quot;qi&quot;, &quot;ba&quot;, &quot;jiu&quot;&#125;;</span><br><span class="line">    for (int i &#x3D; 0; i &lt; s.length(); i++)</span><br><span class="line">        sum +&#x3D; (s[i] - &#39;0&#39;);</span><br><span class="line">    string num &#x3D; to_string(sum);&#x2F;&#x2F;将int转为string</span><br><span class="line">    for (int i &#x3D; 0; i &lt; num.length(); i++) &#123;</span><br><span class="line">        if (i !&#x3D; 0) cout &lt;&lt; &quot; &quot;;</span><br><span class="line">        cout &lt;&lt; str[num[i] - &#39;0&#39;];&#x2F;&#x2F;将数字对应拼音输出</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
